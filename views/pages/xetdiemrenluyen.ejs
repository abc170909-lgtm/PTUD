<!-- views/pages/xetdiemrenluyen.ejs -->


<style>
  .content-wrapper {
    width: 100%;
    max-width: 100%;
    padding: 1.5rem;
  }

  .card {
    background-color: white;
    border-radius: 0.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
  }

  .card-header {
    margin-bottom: 1.5rem;
  }

  .card-header h2 {
    color: #2563eb;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .card-header p {
    color: #6b7280;
    font-size: 0.875rem;
  }

  /* Table */
  .table-container {
    width: 100%;
    overflow-x: auto;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    min-width: 100%;
  }

  thead {
    background-color: #f9fafb;
  }

  th {
    padding: 0.75rem 1rem;
    text-align: left;
    font-weight: 600;
    font-size: 0.875rem;
    color: #374151;
    border-bottom: 1px solid #e5e7eb;
    white-space: nowrap;
  }

  td {
    padding: 0.75rem 1rem;
    border-bottom: 1px solid #e5e7eb;
    font-size: 0.875rem;
    color: #1f2937;
  }

  tbody tr:hover {
    background-color: #f9fafb;
  }

  tbody tr:last-child td {
    border-bottom: none;
  }

  .text-center {
    text-align: center;
  }

  .text-right {
    text-align: right;
  }

  /* Status Colors */
  .status-tot { color: #16a34a; font-weight: 500; }
  .status-kha { color: #2563eb; font-weight: 500; }
  .status-trung-binh { color: #ca8a04; font-weight: 500; }
  .status-yeu { color: #ea580c; font-weight: 500; }
  .status-gioi { color: #15803d; font-weight: 500; }
  .status-kem { color: #dc2626; font-weight: 500; }
  .status-empty { color: #9ca3af; }

  /* Button */
  .btn {
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    border: 1px solid #d1d5db;
    background-color: white;
    color: #374151;
    font-size: 0.875rem;
    cursor: pointer;
    transition: all 0.2s;
  }

  .btn:hover {
    background-color: #f9fafb;
  }

  .btn-primary {
    background-color: #2563eb;
    color: white;
    border: none;
  }

  .btn-primary:hover {
    background-color: #1d4ed8;
  }

  .btn-primary:disabled {
    background-color: #93c5fd;
    cursor: not-allowed;
  }

  .btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Modal */
  .modal-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 50;
    align-items: center;
    justify-content: center;
  }

  .modal-overlay.active {
    display: flex;
  }

  .modal {
    background-color: white;
    border-radius: 0.5rem;
    padding: 1.5rem;
    max-width: 500px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
  }

  .modal-header {
    margin-bottom: 1rem;
  }

  .modal-header h3 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .modal-header p {
    color: #6b7280;
    font-size: 0.875rem;
  }

  .modal-header p span {
    font-weight: 600;
    color: #374151;
  }

  .modal-body {
    padding: 1rem 0;
  }

  .form-group {
    margin-bottom: 1rem;
  }

  .form-label {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
  }

  .required {
    color: #dc2626;
  }

  .form-select {
    width: 100%;
    padding: 0.5rem 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    background-color: white;
    cursor: pointer;
  }

  .form-select:focus {
    outline: none;
    border-color: #2563eb;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
  }

  .modal-footer {
    margin-top: 1.5rem;
    display: flex;
    gap: 0.75rem;
    justify-content: flex-end;
  }

  /* Toast */
  .toast {
    position: fixed;
    top: 1rem;
    right: 1rem;
    background-color: white;
    padding: 1rem 1.5rem;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    display: none;
    align-items: center;
    gap: 0.75rem;
    z-index: 100;
    min-width: 300px;
  }

  .toast.active {
    display: flex;
    animation: slideIn 0.3s ease-out;
  }

  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  .toast.success {
    border-left: 4px solid #16a34a;
  }

  .toast.error {
    border-left: 4px solid #dc2626;
  }

  .toast-icon {
    width: 20px;
    height: 20px;
  }

  .toast-content h4 {
    font-weight: 600;
    margin-bottom: 0.25rem;
    font-size: 0.875rem;
  }

  .toast-content p {
    color: #6b7280;
    font-size: 0.75rem;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .table-container {
      overflow-x: auto;
    }
    
    th, td {
      padding: 0.5rem;
      font-size: 0.75rem;
    }
  }
</style>

<div class="content-wrapper">
  <div class="card">
    <div class="card-header">
      <h2>Xét hạnh kiểm, học lực, rèn luyện</h2>
      <p>Danh sách học sinh lớp 10A1 - Năm học 2023-2024</p>
    </div>

    <div class="table-container">
      <table>
        <thead>
          <tr>
            <th style="width: 60px;" class="text-center">STT</th>
            <th style="width: 120px;">Mã học sinh</th>
            <th style="min-width: 180px;">Tên học sinh</th>
            <th style="width: 100px;">Giới tính</th>
            <th style="width: 120px;">Ngày sinh</th>
            <th style="width: 120px;">Hạnh kiểm</th>
            <th style="width: 120px;">Rèn luyện</th>
            <th style="width: 120px;">Trạng thái</th>
            <th style="width: 120px;" class="text-right">Thao tác</th>
          </tr>
        </thead>
        <tbody id="studentTableBody">
          <!-- Data will be inserted here by JavaScript -->
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- Modal -->
<div class="modal-overlay" id="modalOverlay">
  <div class="modal">
    <div class="modal-header">
      <h3>Đánh giá học sinh</h3>
      <div id="studentInfo"></div>
    </div>
    <div class="modal-body">
      <div class="form-group">
        <label class="form-label" for="hanhKiem">
          Hạnh kiểm <span class="required">*</span>
        </label>
        <select class="form-select" id="hanhKiem">
          <option value="">Chọn loại hạnh kiểm</option>
          <option value="Tốt">Tốt</option>
          <option value="Khá">Khá</option>
          <option value="Trung bình">Trung bình</option>
          <option value="Yếu">Yếu</option>
        </select>
      </div>

      <div class="form-group">
        <label class="form-label" for="renLuyen">
          Rèn luyện <span class="required">*</span>
        </label>
        <select class="form-select" id="renLuyen">
          <option value="">Chọn loại rèn luyện</option>
          <option value="Tốt">Tốt</option>
          <option value="Khá">Khá</option>
          <option value="Trung bình">Trung bình</option>
          <option value="Yếu">Yếu</option>
        </select>
      </div>
    </div>
    <div class="modal-footer">
      <button class="btn" onclick="closeModal()">Hủy</button>
      <button class="btn btn-primary" id="submitBtn" onclick="handleSubmit()">Xác nhận lưu</button>
    </div>
  </div>
</div>

<!-- Toast -->
<div class="toast" id="toast">
  <svg class="toast-icon" id="toastIcon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
  </svg>
  <div class="toast-content">
    <h4 id="toastTitle">Thành công</h4>
    <p id="toastMessage">Đã cập nhật đánh giá cho học sinh</p>
  </div>
</div>

<script>
  // Mock data
  let students = [
    { maHocSinh: 'HS001', tenHocSinh: 'Nguyễn Văn An', khoaHoc: '2023-2024', birthday: '15/03/2010', gioiTinh: 'Nam', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
    { maHocSinh: 'HS002', tenHocSinh: 'Trần Thị Bình', khoaHoc: '2023-2024', birthday: '20/05/2010', gioiTinh: 'Nữ', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
    { maHocSinh: 'HS003', tenHocSinh: 'Lê Văn Cường', khoaHoc: '2023-2024', birthday: '10/07/2010', gioiTinh: 'Nam', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
    { maHocSinh: 'HS004', tenHocSinh: 'Phạm Thị Dung', khoaHoc: '2023-2024', birthday: '25/01/2010', gioiTinh: 'Nữ', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
    { maHocSinh: 'HS005', tenHocSinh: 'Hoàng Văn Em', khoaHoc: '2023-2024', birthday: '08/09/2010', gioiTinh: 'Nam', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
    { maHocSinh: 'HS006', tenHocSinh: 'Đỗ Thị Phương', khoaHoc: '2023-2024', birthday: '12/11/2010', gioiTinh: 'Nữ', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
    { maHocSinh: 'HS007', tenHocSinh: 'Vũ Văn Giang', khoaHoc: '2023-2024', birthday: '30/04/2010', gioiTinh: 'Nam', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
    { maHocSinh: 'HS008', tenHocSinh: 'Bùi Thị Hà', khoaHoc: '2023-2024', birthday: '18/06/2010', gioiTinh: 'Nữ', trangThai: 'Đang học', hanhKiem: '', renLuyen: '' },
  ];

  let currentStudent = null;

  function getStatusClass(status) {
    if (!status) return 'status-empty';
    const statusMap = {
      'Tốt': 'status-tot',
      'Khá': 'status-kha',
      'Trung bình': 'status-trung-binh',
      'Yếu': 'status-yeu',
      'Giỏi': 'status-gioi',
      'Kém': 'status-kem'
    };
    return statusMap[status] || 'status-empty';
  }

  function renderTable() {
    const tbody = document.getElementById('studentTableBody');
    tbody.innerHTML = students.map((student, index) => `
      <tr>
        <td class="text-center">${index + 1}</td>
        <td>${student.maHocSinh}</td>
        <td>${student.tenHocSinh}</td>
        <td>${student.gioiTinh}</td>
        <td>${student.birthday}</td>
        <td><span class="${getStatusClass(student.hanhKiem)}">${student.hanhKiem || '---'}</span></td>
        <td><span class="${getStatusClass(student.renLuyen)}">${student.renLuyen || '---'}</span></td>
        <td>${student.trangThai}</td>
        <td class="text-right">
          <button class="btn" onclick="openModal('${student.maHocSinh}')">Đánh giá</button>
        </td>
      </tr>
    `).join('');
  }

  function openModal(maHocSinh) {
    currentStudent = students.find(s => s.maHocSinh === maHocSinh);
    if (!currentStudent) return;

    document.getElementById('studentInfo').innerHTML = `
      <p><span>Mã học sinh:</span> ${currentStudent.maHocSinh}</p>
      <p><span>Tên học sinh:</span> ${currentStudent.tenHocSinh}</p>
    `;

    document.getElementById('hanhKiem').value = currentStudent.hanhKiem || '';
    document.getElementById('renLuyen').value = currentStudent.renLuyen || '';

    document.getElementById('modalOverlay').classList.add('active');
  }

  function closeModal() {
    document.getElementById('modalOverlay').classList.remove('active');
    currentStudent = null;
    document.getElementById('hanhKiem').value = '';
    document.getElementById('renLuyen').value = '';
  }

  function showToast(type, title, message) {
    const toast = document.getElementById('toast');
    const toastIcon = document.getElementById('toastIcon');
    const toastTitle = document.getElementById('toastTitle');
    const toastMessage = document.getElementById('toastMessage');

    toast.className = `toast ${type} active`;
    toastTitle.textContent = title;
    toastMessage.textContent = message;

    if (type === 'success') {
      toastIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>';
      toastIcon.style.color = '#16a34a';
    } else {
      toastIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
      toastIcon.style.color = '#dc2626';
    }

    setTimeout(() => {
      toast.classList.remove('active');
    }, 3000);
  }

  async function handleSubmit() {
    const hanhKiem = document.getElementById('hanhKiem').value;
    const renLuyen = document.getElementById('renLuyen').value;

    if (!hanhKiem || !renLuyen) {
      showToast('error', 'Lỗi', 'Vui lòng chọn đầy đủ thông tin đánh giá');
      return;
    }

    const submitBtn = document.getElementById('submitBtn');
    submitBtn.disabled = true;
    submitBtn.textContent = 'Đang lưu...';

    // Simulate API call
    try {
      await new Promise((resolve, reject) => {
        setTimeout(() => {
          // Simulate random success/failure (90% success rate)
          if (Math.random() > 0.1) {
            resolve(true);
          } else {
            reject(new Error('Lưu thất bại'));
          }
        }, 1000);
      });

      // Update student data
      students = students.map(s => 
        s.maHocSinh === currentStudent.maHocSinh 
          ? { ...s, hanhKiem, renLuyen }
          : s
      );

      renderTable();
      closeModal();
      showToast('success', 'Thành công', 'Đã cập nhật đánh giá cho học sinh');
    } catch (error) {
      showToast('error', 'Lỗi', 'Lưu thất bại, vui lòng thử lại');
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Xác nhận lưu';
    }
  }

  // Close modal when clicking overlay
  document.getElementById('modalOverlay').addEventListener('click', function(e) {
    if (e.target === this) {
      closeModal();
    }
  });

  // Initialize table
  renderTable();
</script>
